<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.nwu.museum.backstage.dao.NewsMapper">
  <resultMap type="edu.nwu.museum.backstage.domain.News" id="NewsMap">
    <id column="news_id" property="newsId" jdbcType="VARCHAR"/>
    <id column="news_title" property="newsTitle" jdbcType="VARCHAR"/>
    <id column="news_type" property="newsType" jdbcType="INTEGER"/>
    <id column="news_speaker" property="newsSpeaker" jdbcType="VARCHAR"/>
    <id column="news_time" property="newsTime" jdbcType="DATE"/>
    <id column="museum_id" property="museumId" jdbcType="VARCHAR"/>
    <id column="news_image" property="newsImage" jdbcType="VARCHAR"/>
    <id column="news_text" property="newsText" jdbcType="BLOB"/>
    <id column="create_time" property="createTime" jdbcType="DATE"/>
    <id column="creator" property="creator" jdbcType="VARCHAR"/>
  </resultMap>

  <select id="findAll" resultType="edu.nwu.museum.backstage.domain.News">
    select news_id newsId,
       news_title newsTitle,
       news_type newsType,
       news_speaker newsSpeaker,
       news_time newsTime,
       museum_id museumId,
       news_image newsImage,
       news_text newsText,
       create_time createTime,
       creator creator
    from news
  </select>

  <select id="findByNewsId" parameterType="java.lang.String" resultType="edu.nwu.museum.backstage.domain.News">
    select news_id newsId,
       news_title newsTitle,
       news_type newsType,
       news_speaker newsSpeaker,
       news_time newsTime,
       museum_id museumId,
       news_image newsImage,
       news_text newsText,
       create_time createTime,
       creator creator
    from news
    where news_id = #{ newsId }
  </select>

  <update id="update" parameterType="edu.nwu.museum.backstage.domain.News">
    update news
    set news_id = #{ newsId },
       news_title = #{ newsTitle },
       news_type = #{ newsType },
       news_speaker = #{ newsSpeaker },
       news_time = #{ newsTime, jdbcType = TIMESTAMP },
       museum_id = #{ museumId },
       news_image = #{ newsImage },
       news_text = #{ newsText },
       create_time = #{ createTime },
       creator = #{ creator }
    where news_id = #{ newsId }
  </update>

  <insert id="insert" parameterType="edu.nwu.museum.backstage.domain.News">
    insert into news (
      news_id,
       news_title,
       news_type,
       news_speaker,
       news_time,
       museum_id,
       news_image,
       news_text,
       create_time,
       creator
    )
    values (
       #{ newsId },
       #{ newsTitle },
       #{ newsType },
       #{ newsSpeaker },
       #{ newsTime, jdbcType = TIMESTAMP },
       #{ museumId },
       #{ newsImage },
       #{ newsText },
       #{ createTime },
       #{ creator }
    )
  </insert>

  <delete id="deleteByNewsId">
    delete from news where news_id = #{ newsId }
  </delete>
</mapper>